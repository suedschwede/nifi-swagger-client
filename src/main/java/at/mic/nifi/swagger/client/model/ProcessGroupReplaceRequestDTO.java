/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.12.1
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package at.mic.nifi.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * ProcessGroupReplaceRequestDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-05T15:38:14.826+01:00")
public class ProcessGroupReplaceRequestDTO {
  @SerializedName("requestId")
  private String requestId = null;

  @SerializedName("processGroupId")
  private String processGroupId = null;

  @SerializedName("uri")
  private String uri = null;

  @SerializedName("lastUpdated")
  private String lastUpdated = null;

  @SerializedName("complete")
  private Boolean complete = null;

  @SerializedName("failureReason")
  private String failureReason = null;

  @SerializedName("percentCompleted")
  private Integer percentCompleted = null;

  @SerializedName("state")
  private String state = null;

   /**
   * The unique ID of this request.
   * @return requestId
  **/
  @ApiModelProperty(example = "null", value = "The unique ID of this request.")
  public String getRequestId() {
    return requestId;
  }

  public ProcessGroupReplaceRequestDTO processGroupId(String processGroupId) {
    this.processGroupId = processGroupId;
    return this;
  }

   /**
   * The unique ID of the Process Group being updated
   * @return processGroupId
  **/
  @ApiModelProperty(example = "null", value = "The unique ID of the Process Group being updated")
  public String getProcessGroupId() {
    return processGroupId;
  }

  public void setProcessGroupId(String processGroupId) {
    this.processGroupId = processGroupId;
  }

   /**
   * The URI for future requests to this drop request.
   * @return uri
  **/
  @ApiModelProperty(example = "null", value = "The URI for future requests to this drop request.")
  public String getUri() {
    return uri;
  }

   /**
   * The last time this request was updated.
   * @return lastUpdated
  **/
  @ApiModelProperty(example = "null", value = "The last time this request was updated.")
  public String getLastUpdated() {
    return lastUpdated;
  }

   /**
   * Whether or not this request has completed
   * @return complete
  **/
  @ApiModelProperty(example = "null", value = "Whether or not this request has completed")
  public Boolean getComplete() {
    return complete;
  }

   /**
   * An explanation of why this request failed, or null if this request has not failed
   * @return failureReason
  **/
  @ApiModelProperty(example = "null", value = "An explanation of why this request failed, or null if this request has not failed")
  public String getFailureReason() {
    return failureReason;
  }

   /**
   * The percentage complete for the request, between 0 and 100
   * @return percentCompleted
  **/
  @ApiModelProperty(example = "null", value = "The percentage complete for the request, between 0 and 100")
  public Integer getPercentCompleted() {
    return percentCompleted;
  }

   /**
   * The state of the request
   * @return state
  **/
  @ApiModelProperty(example = "null", value = "The state of the request")
  public String getState() {
    return state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessGroupReplaceRequestDTO processGroupReplaceRequestDTO = (ProcessGroupReplaceRequestDTO) o;
    return Objects.equals(this.requestId, processGroupReplaceRequestDTO.requestId) &&
        Objects.equals(this.processGroupId, processGroupReplaceRequestDTO.processGroupId) &&
        Objects.equals(this.uri, processGroupReplaceRequestDTO.uri) &&
        Objects.equals(this.lastUpdated, processGroupReplaceRequestDTO.lastUpdated) &&
        Objects.equals(this.complete, processGroupReplaceRequestDTO.complete) &&
        Objects.equals(this.failureReason, processGroupReplaceRequestDTO.failureReason) &&
        Objects.equals(this.percentCompleted, processGroupReplaceRequestDTO.percentCompleted) &&
        Objects.equals(this.state, processGroupReplaceRequestDTO.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, processGroupId, uri, lastUpdated, complete, failureReason, percentCompleted, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessGroupReplaceRequestDTO {\n");
    
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    processGroupId: ").append(toIndentedString(processGroupId)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    complete: ").append(toIndentedString(complete)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    percentCompleted: ").append(toIndentedString(percentCompleted)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

