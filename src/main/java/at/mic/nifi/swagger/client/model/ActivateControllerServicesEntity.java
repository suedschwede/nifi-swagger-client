/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.12.1
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package at.mic.nifi.swagger.client.model;

import java.util.Objects;
import at.mic.nifi.swagger.client.model.RevisionDTO;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * ActivateControllerServicesEntity
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-05T15:38:14.826+01:00")
public class ActivateControllerServicesEntity {
  @SerializedName("id")
  private String id = null;

  /**
   * The desired state of the descendant components
   */
  public enum StateEnum {
    @SerializedName("ENABLED")
    ENABLED("ENABLED"),
    
    @SerializedName("DISABLED")
    DISABLED("DISABLED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("state")
  private StateEnum state = null;

  @SerializedName("components")
  private Map<String, RevisionDTO> components = new HashMap<String, RevisionDTO>();

  @SerializedName("disconnectedNodeAcknowledged")
  private Boolean disconnectedNodeAcknowledged = null;

  public ActivateControllerServicesEntity id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the ProcessGroup
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "The id of the ProcessGroup")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ActivateControllerServicesEntity state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * The desired state of the descendant components
   * @return state
  **/
  @ApiModelProperty(example = "null", value = "The desired state of the descendant components")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public ActivateControllerServicesEntity components(Map<String, RevisionDTO> components) {
    this.components = components;
    return this;
  }

  public ActivateControllerServicesEntity putComponentsItem(String key, RevisionDTO componentsItem) {
    this.components.put(key, componentsItem);
    return this;
  }

   /**
   * Optional services to schedule. If not specified, all authorized descendant controller services will be used.
   * @return components
  **/
  @ApiModelProperty(example = "null", value = "Optional services to schedule. If not specified, all authorized descendant controller services will be used.")
  public Map<String, RevisionDTO> getComponents() {
    return components;
  }

  public void setComponents(Map<String, RevisionDTO> components) {
    this.components = components;
  }

  public ActivateControllerServicesEntity disconnectedNodeAcknowledged(Boolean disconnectedNodeAcknowledged) {
    this.disconnectedNodeAcknowledged = disconnectedNodeAcknowledged;
    return this;
  }

   /**
   * Acknowledges that this node is disconnected to allow for mutable requests to proceed.
   * @return disconnectedNodeAcknowledged
  **/
  @ApiModelProperty(example = "null", value = "Acknowledges that this node is disconnected to allow for mutable requests to proceed.")
  public Boolean getDisconnectedNodeAcknowledged() {
    return disconnectedNodeAcknowledged;
  }

  public void setDisconnectedNodeAcknowledged(Boolean disconnectedNodeAcknowledged) {
    this.disconnectedNodeAcknowledged = disconnectedNodeAcknowledged;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActivateControllerServicesEntity activateControllerServicesEntity = (ActivateControllerServicesEntity) o;
    return Objects.equals(this.id, activateControllerServicesEntity.id) &&
        Objects.equals(this.state, activateControllerServicesEntity.state) &&
        Objects.equals(this.components, activateControllerServicesEntity.components) &&
        Objects.equals(this.disconnectedNodeAcknowledged, activateControllerServicesEntity.disconnectedNodeAcknowledged);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, state, components, disconnectedNodeAcknowledged);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActivateControllerServicesEntity {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    disconnectedNodeAcknowledged: ").append(toIndentedString(disconnectedNodeAcknowledged)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

